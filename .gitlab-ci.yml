before_script:
  - node -v
  - docker version
  - docker compose version
  - pwd
  - ls -la

stages:
  - pull
  - setup
  - lint_and_format
  - test
  - build
  - deployment

after_script:
  - echo "Gitlab has done a stage"

pull1:
  stage: pull
  script:
    - echo "please work"
    - echo "Pulling from github"
    - echo Ã§a marche

setup:
  stage: setup
  script:
    - docker compose -f docker-compose.ci.yml up --build -d

lint_and_format:
  stage: lint_and_format
  script:
    - chmod 0777 -R .
    - docker compose -f docker-compose.ci.yml run ec_api_catalogue_backend npm run check-lint-and-format-repo

test:
  stage: test
  script:
    - docker compose -f docker-compose.ci.yml up -d mongodb
    - docker compose -f docker-compose.ci.yml run ec_api_catalogue_backend npm run test
  after_script:
    - docker compose -f docker-compose.ci.yml down

build1:
  stage: build
  script:
    - echo "Building project"
    - cp /home/pauldb/eur/env/api_catalogue_gateway/.env ./.env
    - pwd
    - ls -latr
    - docker compose -f docker-compose.prod.yml up --build -d
  only:
    - master
    - main
  environment:
    name: production
